<h1>Add your modules</h1>

<p>It's pretty simple to add yourself to the list of CPAN authors on our front
page. Currently we only support code repos on Github and a limited number of
CI services (but we plan to add support for more services in the future).</p>

<p>Here are the steps to follow:</p>

<ol>
<li>Add a link to the code repos to the metadata of all of your CPAN modules.
(Gabor has <a href="https://perlmaven.com/how-to-add-link-to-version-control-system-of-a-cpan-distributions"> a tutorial about that</a>.)</li>
<li>Decide which of the supported CI services you want to use and configure
them correctly. (More details on the various services below.)</li>
<li>Take a fork of the <a href="https://github.com/davorg/dashboard">CPAN Dashboard</a> repo.</li>
<li>Add a file in the <tt>authors</tt> directory. Copy 
<a href="https://github.com/davorg/dashboard/blob/master/authors/DAVECROSS.json">this file</a> and
name the new file using your CPAN author name.</li>
<li>Update the file to contain the correct information about your CPAN and Github usenames and
the CI services that you use.</li>
<li>Send a <a href="https://github.com/davorg/dashboard/pulls">pull request</a> adding your file
to my repo.</li>
<li>Sit back and wait for me to merge your PR.</li>
</ol>

<h2>Supported CI services</h2>

<p>We currently support the following CI services:</p>

<ul>
<li><b>Github Actions</b><br>
Github Actions can do many things. But we're just using it to run tests on each commit and report
on the success or failure of the test run. Add a directory called <tt>.github/workflows</tt>
to your code repository and in that directory create a YAML file that runs the processes that you
want to run. A basic workflow file for testing a CPAN module might look
<a href="https://github.com/davorg/array-compare/blob/master/.github/workflows/perltest.yml">something like this</a>.
Remember the value of the <tt>name</tt> key as you'll need to add that to the
<tt>ci.gh_workflow_name</tt> in your new configuration file. Because of a limitation of the way
we're dealing with Github Actions, all of the workflows you add to your CPAN repos will need to
have the same name (I call mine "CI").</li>
</li>
<li><b>Travis CI</b><br>
To add your repos to <a href="https://travis-ci.org/">Travis CI</a>, you need to set up an
account there. You can log in using your Github credentials. Then sync your repos and switch on
the ones that you want Travis CI to work with. You'll then need to add a <tt>.travis.yml</tt>
file to your CPAN repos. Travis CI has
<a href="https://docs.travis-ci.com/user/languages/perl/">a guide to doing that</a>. Having done
this, the next time you commit to the repo, you'll get a test run on the Travis CI site.</li>
</ol>
